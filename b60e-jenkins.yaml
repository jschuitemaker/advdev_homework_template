apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ${GUID}-jenkins
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 2
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: jenkins
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: jenkins
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "true"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: "false"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: jenkins
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: "false"
          image: 172.30.1.1:5000/openshift/jenkins@sha256:26d9f54ff135d9a28c5e49a431328c9c49af5235c952ce2b9cb4afafdc336fa7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 360
            successThreshold: 1
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          resources:
            limits:
              memory: 2Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
        lastTriggeredImage: 172.30.1.1:5000/openshift/jenkins@sha256:26d9f54ff135d9a28c5e49a431328c9c49af5235c952ce2b9cb4afafdc336fa7
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    creationTimestamp: null
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: jenkins
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-10-10T14:44:38Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace":
        "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    creationTimestamp: null
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: jenkins-slave-maven-cent
    name: jenkins-slave-maven-cent
  spec:
    ports:
    - name: 53-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deploymentconfig: jenkins-slave-maven-cent
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: jenkins
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 4Gi
    volumeName: pv0008
  status: {}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: jenkins-slave-appdev
    name: jenkins-slave-appdev
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: jenkins-slave-appdev:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM docker.io/openshift/jenkins-slave-maven-centos7:v3.9
        USER root
        RUN yum -y install skopeo apb && \yum clean all
        USER 1001
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins-slave-maven-centos7:v3.9
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: -MUu5D16yywR-6pbZoc5
      type: GitHub
    - generic:
        secret: 9c-lrnSiet9Hwyh4R5Zg
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: mlbparks-pipeline
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: MLBParks
      git:
        ref: master
        uri: https://github.com/jschuitemaker/advdev_homework_template.git
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: GUID
          value: ${GUID}
        - name: CLUSTER
          value: svc
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${GUID}-jenkins
      template: jenkins-persistent-template
    name: nationalparks-pipeline
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: Nationalparks
      git:
        ref: master
        uri: https://github.com/jschuitemaker/advdev_homework_template.git
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: GUID
          value: ${GUID}
        - name: CLUSTER
          value: svc
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    triggers: []
  status:
    lastVersion: 0
